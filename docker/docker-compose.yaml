services:

  postgres:
    build:
      context: ./postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  petclinic:
    # you can use profiles to start applications separately from the infrastructure
    # profiles: [app]
    build:
      context: ../jmix-petclinic-2
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MAIN_DATASOURCE_URL: jdbc:postgresql://postgres:5432/petclinic
      MAIN_DATASOURCE_USERNAME: postgres
      MAIN_DATASOURCE_PASSWORD: postgres
      MANAGEMENT_OTLP_LOGGING_ENDPOINT: http://otel-collector:4318/v1/logs
    ports:
      - "8080:8080"

  petclinic-portal:
    # you can use profiles to start applications separately from the infrastructure
    # profiles: [app]
    build:
      context: ../jmix-petclinic-portal
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MAIN_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portal
      MAIN_DATASOURCE_USERNAME: postgres
      MAIN_DATASOURCE_PASSWORD: postgres

      PETCLINIC_BASEURL: http://petclinic:8080
      PETCLINIC_CLIENTID: petclinic-portal
      PETCLINIC_CLIENTSECRET: UYfIcnMhoL
      MANAGEMENT_OTLP_LOGGING_ENDPOINT: http://otel-collector:4318/v1/logs
    ports:
      - "8081:8081"

  # tag::otel-collector[]
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    ports:
      - "4318:4318"
    volumes:
      - ./otelcol-config.yaml:/config.yaml
    command:
      - --config=file:/config.yaml
  # end::otel-collector[]

  # tag::loki[]
  loki:
    image: grafana/loki:3.5

  grafana:
    image: grafana/grafana:11.6.1
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/grafana-datasources.yaml
    # end::loki[]

networks:
  default:
    name: jmix-observability